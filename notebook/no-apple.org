Although I have never owned a Mac, my games are Mac-compatible, and
until recently I considered taking the next logical step and
developing games for the iPhone. But Apple's upcoming iPhone OS 4.0
SDK developer agreement prohibits (among other things) the use of
languages like Common Lisp, even via cross-compilation. Common Lisp is
not explicitly prohibited, instead Apple have rather surprisingly set
out a white-list of just three approved languages. Now one may develop
only in the Party-sanctioned faiths C, C++, and Objective-C. Since I
can't develop for iPhone without agreeing to Apple's development
terms, and these terms prevent Common Lisp usage, I now can't develop
for iPhone at all.

This doesn't seem like a step forward for consumer freedom. I don't
have to ask permission or sign up to develop and distribute my games
for the PC. I just do it. Will someone explain to me why this openness
is so bad for the consumer that the whole momentum of the industry is
toward more and more proprietary locked-down devices and software and
away from open architectures like the PC? And if this openness is NOT
bad for the consumer, then who is it bad for?

Just for a moment let me explain what I mean by an open
architecture. In an open architecture, your device does what you tell
it to. It does not refuse your commands to instead obey some large
corporation or group of large corporations. For example you cannot
skip the FBI warning on DVDs---if you try to fast-forward, a little
"NO" icon comes up. The players could perfectly well skip this, but
the DVD people don't want you to, so they force the manufacturer to
force YOU to comply, via the licensing conditions for DVD
technology. The same goes for region-coding.

So, back to the consumer. From what I've read, the pro-Apple comments
in the ongoing SDK drama seem to openly acknowledge that this makes
sense for Apple and its shareholders. Fine. But what exactly is the
benefit to the consumer?  How exactly will my iPhone owning friends
benefit from app developers now being restricted to an aging trio of
languages for developing iPhone apps? Languages which make free use of
pointers and manual memory allocation---the twin causes of C-based
software's perennial vulnerability to the kind of crashes and hacks
Apple claims are a concern? While Objective-C is nice, it's still C,
and it's also largely Apple-specific. And C++ is just garbage---the
compost heap where, for lack of any apparent intellectual restraint,
all the 1990's overheated ideas about programming and software design
were allowed to gather and collectively rot.

Likewise, when such a company as Adobe develops a major product for
iPhone and this product is rendered unusable by a flick of Apple's
pen, how will the consumer benefit?

They won't. Apple is not protecting their customers from bugs; they
are protecting the market share for the iPhone. The threat of Adobe's
Flash compiler is that people can develop single-codebase applications
that work on iPhone as well as other platforms. While I may not be
terribly interested in Flash myself, this is exactly the KIND of thing
I want to do, because then it would be (guess what?) easier to develop
simultaneously for iPhone and other platforms. The whole advantage of
the cross-platform game development stack I use (XE2, SBCL, SDL, and
LISPBUILDER-SDL) is that I can write one codebase and build for Linux,
Windows, Macintosh, and whomever else will have me. Presuming the
consumer could obtain some value (say, entertainment value) from my
software, I'd say it being available on more platforms is a win for
both the consumer and the developer. It means neither of us are
restricted to one platform, and I can more easily serve consumers on
different platforms.

But this is exactly why cross-platform applications are bad for those
who hold the keys to the platform. Cross-platform development means
someone somewhere might push a button and add value to another
platform (by cross-compiling.) 

There's the rub. There really is no consumer advantage to the
closed-architecture proprietary gaming console (or phone). On the
contrary, the platform-makers are virtually compelled to build and
license their software and hardware in anti-consumer ways. So that
Sony can remove a significant and useful feature (Linux support) not
just from newly manufactured models, but from the Playstation 3 I
bought two years ago, via software update. I haven't used my PS3 in
several weeks because of some basement flooding, but next time I do
the System Update it will blitz my Linux partition, and the "Other OS"
option will permanently disappear from the system menu.

(If I choose not to update, I can continue to use Linux, but just
about everything including PSN will be shut off, including Blu-ray
discs that require future firmware updates. It used to be that you
bought a VHS and it played in VHS players, you bought a DVD and it
played in DVD players, and so on. My only comment to Sony is, hey, I
paid four hundred bucks for this thing!)

Now a thought experiment. If you want to play Demons' Souls, you have
to have a Playstation 3, and therefore you've got to have Sony. But
imagine if there were just PC gaming and Demons Souls were a PC game,
what would be the advantage for Sony? Sony doesn't fundamentally make
better PC's than anyone else, and probably wouldn't in this fictional
universe where there is no Playstation 3.

The big counter-argument to all this, the big reason why people tell
us we NEED proprietary locked-down game consoles, is the early 80's
video game market crash. Usually the defense centers on the claim that
lack of platform-makers direct hardware-level control over what gets
released led to a flood of crappy games, and then to a consumer
backlash, driving the subsequent crash of the market. Without
lockdown, the market will crash again right? (Underlying all this is
that an open market in games is not really a good idea, but that's a
whole different essay.) Their point is that we need the platform
makers to be in control of what gets released.

I can report based on my own admittedly limited experience at
Irrational Games, that the creative control exerted over game design
by Sony is not a driving force for quality in games, rather quite the
opposite. It's the same talking-points push toward
blockbuster-appeal-for-every-title that has led to enforced
mediocrity.

