
This post is the first in a series on the future of Lisp in games
development.

There's never been a better time to think big about Lisp and
games. The recent <a href="http://dto.github.com/notebook/lgdc.html">2010 Lisp Game Design Challenge</a> was a success, and
brought many new faces to the lispgames community. The crowdsourced
<a href="http://www.cliki.net/LispGameDesignChallenge">LGDC10 registration cliki page</a> also grew itself a valuable list of
lisp game development resources. There are links to various libraries
for 2D, 3D, physics simulation, sound, and quite a bit more.

Things are looking bright for our community. Thanks to
cross-platform libraries and tools, we are now able to deliver Common
Lisp games compiled natively for Windows, Mac OSX, and Linux---all
built from a single codebase and then cross-compiled in what is
quickly becoming a push-button process. While challenges remain,
(Apple's recent iPhone developer agreement, for example) we are in a
position to make a high-quality, cross-platform games development
toolset out of Common Lisp. With that in mind we can start thinking
beyond the PC, about platforms like the Playstation 3 and Xbox 360.

We can promote this by getting people to learn Lisp via games
development. We could use example games, HOWTO documents, and starter
kits for setting up a Lisp gamedev environment on various
platforms. And there's been some discussion recently of doing a
GameMaker clone in Common Lisp---a complete graphical game creation
environment. (I have some <a href="http://www.youtube.com/watch?v=E5KmZxQxiJ0">ideas of my own</a> in that direction.) 

Furthermore, it's not required to argue that one develop the whole
game in Lisp. We could just as easily recommend Lisp for rapid
prototyping, or for content-creation tools that bridge the gap between
designers and programmers. Lisp can be applied to the whole spectrum
of software used in developing games (for example GNU Emacs for
editing code), not just for the final product. (See <a href="http://bc.tech.coop/blog/060118.html">this post</a> for some
thoughts and quotes on Lisp in the games industry.)

I think things will only improve as we start collaborating on projects
and bouncing ideas off each other, and I look forward to our progress.

Today's featured project is Bart Botta's
ultracool <a href="http://github.com/3b/3bil">as-yet-unnamed</a>
cross-compiler from Common Lisp into AVM2 (Adobe Virtual
Machine) bytecode. Although the compiler is quite new, Bart used it to
create his
LGDC010 <a href="http://3bb.cc/projects/lgdc/jigsaw/index.html">contest
entry.</a> (Flash required---this is a real Flash application
auto-translated from a subset of Common Lisp.)

I'll be covering more projects and conducting interviews with
Lispers. Please comment here or email me if you'd like me to cover
your project.

More to come!

